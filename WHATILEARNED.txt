(2022.07.15)깃허브 배운 것 정리
# 깃허브 사용
git init
> 새 폴더에서 깃허브 사용 지정(master)
git status
> 깃 상태 확인
git config --global --list
> 깃 사용자 정보 확인
git config --global --unset user.email
git config --global --unset user.name
> 깃 사용자 정보 제거
git config --global user.email "이메일"
git config --global user.name "이름"
> 깃 사용자 정보 등록
> 기기가 변경됬다면 자격증명관리자에서 깃허브 정보 제거할 것
git config --global --list
git add a.txt
> 깃 스테이징
git commit -m 'root commit'
> 깃 커밋
git status
git log
> 커밋 로그 확인
git log --oneline
> 커밋 로그 확인 ( 한줄로 )
git checkout 해쉬값
> 해당 커밋까지 버전 보기
git checkout master
> 원래 버전으로 돌아오기
git remote -v
> 현재 커밋 버전 확인
git remote 주소
> 해당 주소의 깃허브에 연결
git push origin master
> 로컬에서 대기중인 커밋을 깃허브로 등록
git clone 주소
> 깃허브 레포지토리를 로컬에 폴더로 가져오기(복사)
git pull origin master
> 깃허브에 갱신된 커밋을 로컬로 가져와 반영하기
touch .gitignore
> 깃 추적을 회피할 파일 명시할 파일
> write file direction
> gitignore.io
.gitkeep
> 형태 유지를 위한 빈 폴더 만드는 방법
> empty folder remain for skeleton
(2022.07.16) 휴식
(2022.07.17) 중급 문제 3개를 추가로 품
